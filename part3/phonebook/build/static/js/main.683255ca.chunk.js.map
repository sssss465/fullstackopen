{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","res","data","newObject","post","id","put","delete","console","log","Filter","search","changeSearch","value","onChange","PersonForm","submitHandler","newName","changeName","phone","changePhone","onSubmit","type","Persons","persons","setPersons","filter","person","name","toLowerCase","indexOf","map","key","number","onClick","window","confirm","personService","p","catch","err","removePerson","Notification","message","msg","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","setNewName","setNewPhone","setNewSearch","success","setSuccess","useEffect","response","e","target","event","preventDefault","newname","length","dup","find","concat","setTimeout","href","ReactDOM","render","document","getElementById"],"mappings":"6NACMA,EAAU,eAyBD,EAvBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAACC,GAAD,OAASA,EAAIC,SAqBpB,EAlBA,SAACC,GAEd,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAACC,GAAD,OAASA,EAAIC,SAgBpB,EAbA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAACC,GAAD,OAASA,EAAIC,SAWpB,EARA,SAACG,GAEd,OADgBP,IAAMS,OAAN,UAAgBV,EAAhB,YAA2BQ,IAC5BL,MAAK,SAACC,GAEnB,OADAO,QAAQC,IAAIR,GACLA,EAAIC,SCnBTQ,EAAS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aACxB,OAAO,2BAAOC,MAAOF,EAAQG,SAAUF,KAEnCG,EAAa,SAAC,GAMb,IALLC,EAKI,EALJA,cACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,MACAC,EACI,EADJA,YAEA,OACE,0BAAMC,SAAUL,GACd,sCACQ,2BAAOX,GAAG,MAAMQ,MAAOI,EAASH,SAAUI,KAElD,wCACU,2BAAOL,MAAOM,EAAOL,SAAUM,KAEzC,6BACE,4BAAQE,KAAK,UAAb,UAKFC,EAAU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,QAASb,EAAyB,EAAzBA,OAAQc,EAAiB,EAAjBA,WAYlC,OACE,4BACGD,EACEE,QACC,SAACC,GAAD,OAC+D,IAA7DA,EAAOC,KAAKC,cAAcC,QAAQnB,EAAOkB,kBAE5CE,KAAI,SAACJ,GAAD,OACH,wBAAIK,IAAKL,EAAOtB,IACbsB,EAAOC,KADV,IACiBD,EAAOM,OAAQ,IAC9B,4BAAQC,QAAS,kBArBN,SAACP,GAAY,IACxBtB,EAAasB,EAAbtB,GAAIuB,EAASD,EAATC,KACRO,OAAOC,QAAP,iBAAyBR,KAC3BS,EACUhC,GACPL,MAAK,SAACC,GACLO,QAAQC,IAAIR,EAAK,WACjBwB,EAAWD,EAAQE,QAAO,SAACY,GAAD,OAAOA,EAAEjC,KAAOA,SAE3CkC,OAAM,SAACC,GAAD,OAAShC,QAAQC,IAAI+B,MAYDC,CAAad,KAApC,gBAMNe,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,IAAKA,EACH,OAAO,KAF2B,IAInBC,EAAeD,EAAxBA,QACFE,EAAQ,CACZC,MAF8BH,EAAVG,MAGpBC,WAAY,YACZC,SAAU,GACVC,YAAa,QACbC,aAAc,EACdC,QAAS,GACTC,aAAc,IAGhB,OAAO,yBAAKP,MAAOA,GAAQD,IAiGdS,EA/FH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACT9B,EADS,KACAC,EADA,OAEc6B,mBAAS,IAFvB,mBAETrC,EAFS,KAEAsC,EAFA,OAGaD,mBAAS,IAHtB,mBAGTnC,EAHS,KAGFqC,EAHE,OAIeF,mBAAS,IAJxB,mBAIT3C,EAJS,KAID8C,EAJC,OAKcH,mBAAS,MALvB,mBAKTI,EALS,KAKAC,EALA,KAOhBC,qBAAU,WACRpD,QAAQC,IAAI,UACZ4B,IAAuBrC,MAAK,SAAC6D,GAC3BrD,QAAQC,IAAI,oBAAqBoD,GACjCpC,EAAWoC,QAEZ,IA8DH,OACE,6BACE,yCACA,kBAAC,EAAD,CAAclB,QAASe,IACvB,kBAAC,EAAD,CAAQ/C,OAAQA,EAAQC,aAzDP,SAACkD,GACpBL,EAAaK,EAAEC,OAAOlD,UAyDpB,+CAEA,uCACA,kBAAC,EAAD,CACEG,cA1DgB,SAACgD,GACrBA,EAAMC,iBACN,IAAMC,EAAU,CACdtC,KAAMX,EACNgB,OAAQd,EACRd,GAAImB,EAAQ2C,OAAS,GAEjBC,EAAM5C,EAAQ6C,MAAK,SAAC1C,GAAD,OAAYA,EAAOC,OAASsC,EAAQtC,QACzDwC,EAGAjC,OAAOC,QAAP,UACKgC,EAAIxC,KADT,gFAIAS,EACU+B,EAAI/D,GADd,2BACuB+D,GADvB,IAC4BnC,OAAQd,KACjCnB,MAAK,SAACC,GACLO,QAAQC,IAAIR,EAAK,WACjBwB,EACED,EACGE,QAAO,SAACY,GAAD,OAAOA,EAAEjC,KAAO+D,EAAI/D,MAC3BiE,OAFH,2BAEeF,GAFf,IAEoBnC,OAAQd,MAE9BoC,EAAW,IACXC,EAAY,OAEbjB,OAAM,SAACuB,GACNH,EAAW,CACThB,QAAQ,mBAAD,OAAqByB,EAAIxC,KAAzB,6CACPkB,MAAO,QAETyB,YAAW,kBAAMZ,EAAW,QAAO,QAK3CtB,EACU6B,GACPlE,MAAK,SAACC,GACLwB,EAAW,GAAD,mBAAKD,GAAL,CAAc0C,KACxBX,EAAW,IACXC,EAAY,IACZG,EAAW,CAAEhB,QAAQ,SAAD,OAAWuB,EAAQtC,MAAQkB,MAAO,UACtDyB,YAAW,kBAAMZ,EAAW,QAAO,KACnCnD,QAAQC,IAAI,oBAAqBR,MAElCsC,OAAM,SAACuB,GAAD,OAAOtD,QAAQC,IAAIqD,OAYxB7C,QAASA,EACTC,WAvEa,SAAC8C,GAClBxD,QAAQC,IAAIuD,EAAMD,OAAQ,uBAAGS,KAAK,cAAR,eAC1BjB,EAAWS,EAAMD,OAAOlD,QAsEpBM,MAAOA,EACPC,YArEc,SAAC0C,GACnBN,EAAYM,EAAEC,OAAOlD,UAsEnB,kBAAC,EAAD,CAASW,QAASA,EAASC,WAAYA,EAAYd,OAAQA,MC/JjE8D,IAASC,OAAO,kBAAC,EAAD,MAAaC,SAASC,eAAe,W","file":"static/js/main.683255ca.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((res) => res.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((res) => res.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((res) => res.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((res) => {\n    console.log(res);\n    return res.data;\n  });\n};\n\nexport default {\n  getAll: getAll,\n  create: create,\n  update: update,\n  remove,\n};\n","import React, { useState, useEffect } from \"react\";\nimport personService from \"./services/persons\";\n\nconst Filter = ({ search, changeSearch }) => {\n  return <input value={search} onChange={changeSearch}></input>;\n};\nconst PersonForm = ({\n  submitHandler,\n  newName,\n  changeName,\n  phone,\n  changePhone,\n}) => {\n  return (\n    <form onSubmit={submitHandler}>\n      <div>\n        name: <input id=\"yup\" value={newName} onChange={changeName} />\n      </div>\n      <div>\n        number: <input value={phone} onChange={changePhone} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\nconst Persons = ({ persons, search, setPersons }) => {\n  const removePerson = (person) => {\n    const { id, name } = person;\n    if (window.confirm(`Delete ${name}`))\n      personService\n        .remove(id)\n        .then((res) => {\n          console.log(res, \"removed\");\n          setPersons(persons.filter((p) => p.id !== id));\n        })\n        .catch((err) => console.log(err));\n  };\n  return (\n    <ul>\n      {persons\n        .filter(\n          (person) =>\n            person.name.toLowerCase().indexOf(search.toLowerCase()) !== -1\n        )\n        .map((person) => (\n          <li key={person.id}>\n            {person.name} {person.number}{\" \"}\n            <button onClick={() => removePerson(person)}>delete</button>\n          </li>\n        ))}\n    </ul>\n  );\n};\nconst Notification = ({ message }) => {\n  if (!message) {\n    return null;\n  }\n  const { message: msg, color } = message;\n  const style = {\n    color: color,\n    background: \"lightgrey\",\n    fontSize: 20,\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  };\n\n  return <div style={style}>{msg}</div>;\n};\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [phone, setNewPhone] = useState(\"\");\n  const [search, setNewSearch] = useState(\"\");\n  const [success, setSuccess] = useState(null);\n\n  useEffect(() => {\n    console.log(\"effect\");\n    personService.getAll().then((response) => {\n      console.log(\"promise fulfilled\", response);\n      setPersons(response);\n    });\n  }, []);\n\n  const changeName = (event) => {\n    console.log(event.target, <a href=\"google.com\">google.com</a>);\n    setNewName(event.target.value);\n  };\n  const changePhone = (e) => {\n    setNewPhone(e.target.value);\n  };\n  const changeSearch = (e) => {\n    setNewSearch(e.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const newname = {\n      name: newName,\n      number: phone,\n      id: persons.length + 1,\n    };\n    const dup = persons.find((person) => person.name === newname.name);\n    if (dup) {\n      // alert(`${newname.name} is already added to the phonebook`);\n      if (\n        window.confirm(\n          `${dup.name} is already added to the phonebook, replace the old number with a new one?`\n        )\n      ) {\n        personService\n          .update(dup.id, { ...dup, number: phone })\n          .then((res) => {\n            console.log(res, \"updated\");\n            setPersons(\n              persons\n                .filter((p) => p.id !== dup.id)\n                .concat({ ...dup, number: phone })\n            );\n            setNewName(\"\");\n            setNewPhone(\"\");\n          })\n          .catch((e) => {\n            setSuccess({\n              message: `Information of  ${dup.name} has already been removed from the server`,\n              color: \"red\",\n            });\n            setTimeout(() => setSuccess(null), 3000);\n          });\n      }\n      return;\n    }\n    personService\n      .create(newname)\n      .then((res) => {\n        setPersons([...persons, newname]);\n        setNewName(\"\");\n        setNewPhone(\"\");\n        setSuccess({ message: `Added ${newname.name}`, color: \"green\" });\n        setTimeout(() => setSuccess(null), 3000);\n        console.log(\"posted object was\", res);\n      })\n      .catch((e) => console.log(e));\n  };\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={success} />\n      <Filter search={search} changeSearch={changeSearch} />\n      <h2> add new people</h2>\n\n      <h2>Numbers</h2>\n      <PersonForm\n        submitHandler={submitHandler}\n        newName={newName}\n        changeName={changeName}\n        phone={phone}\n        changePhone={changePhone}\n      />\n      <Persons persons={persons} setPersons={setPersons} search={search} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nReactDOM.render(<App></App>, document.getElementById(\"root\"));\n"],"sourceRoot":""}